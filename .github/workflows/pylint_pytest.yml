name: aws-ecr-docker-image-pylint-pytest

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Restore Docker build cache
      uses: actions/cache@v2
      id: restore-docker-cache
      with:
        path: /tmp/docker
        key: docker-${{ github.sha }}
        restore-keys: |
          docker-

    - name: Login to Amazon ECR
      if: steps.restore-docker-cache.outputs.cache-hit != 'true'
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Pull the image from ECR
    - name: Docker pull from Amazon ECR
      if: steps.restore-docker-cache.outputs.cache-hit != 'true'
      env:
        ECR_REGISTRY: ${{ secrets.AWS_REGISTRY_URL }}
      run: |
        docker pull $ECR_REGISTRY

    # Run Image
    - name: Run pylint and pytest
      env:
        ECR_REGISTRY: ${{ secrets.AWS_REGISTRY_URL }}
      run: |
        docker run $ECR_REGISTRY

    # Save Docker build cache for future runs
    - name: Save Docker build cache
      if: steps.restore-docker-cache.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: /tmp/docker
        key: docker-${{ github.sha }}
        restore-keys: |
          docker-
