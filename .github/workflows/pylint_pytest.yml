name: aws-ecr-docker-image-pylint-pytest

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Check for Docker cache
      id: check-cache
      run: |
        if [ -d "/tmp/docker" ]; then
          echo "::set-output name=cache-hit::true"
        else
          echo "::set-output name=cache-hit::false"
        fi

    - name: Pull and run Docker image
      env:
        ECR_REGISTRY: ${{ secrets.AWS_REGISTRY_URL }}
      run: |
        if [ ${{ steps.check-cache.outputs.cache-hit }} == "true" ]; then
          docker load < /tmp/docker/image.tar
        else
          mkdir -p /tmp/docker
          docker pull $ECR_REGISTRY
          docker save $ECR_REGISTRY > /tmp/docker/image.tar
        fi
        docker run $ECR_REGISTRY
