name: pylint_pytest_ecr

on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  ECR_REGISTRY: public.ecr.aws/j2v6p8h8/webapp
  ECR_REPOSITORY: webapp

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull Docker Image from ECR
        uses: docker/cli@v2
        with:
          command: pull
          args: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Run Docker Image
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker run -t -d $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install pipenv
          pipenv install

      - name: Analysing the code with pylint
        run: |
          pipenv run pylint --rcfile=pylint.cfg $(git ls-files '*.py') -s true --fail-under=10

      - name: Now running Pytest
        run: |
          pipenv run pytest

