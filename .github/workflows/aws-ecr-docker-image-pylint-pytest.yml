name: pylint_pytest

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set PYTHONPATH
        run: |
          export PYTHONPATH=$PYTHONPATH:/home/runner/work/Web-app-python/Web-app-python/utils:/home/runner/work/Web-app-python/Web-app-python/generate_data
          echo $PYTHONPATH
      - name: Cache pipenv installation
        uses: actions/cache@v2
        id: cache-pipenv
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          python -m pip install pipenv
      - name: Install packages with pipenv
        run: |
          pipenv install
      - name: Generate CSV files to test
        run: |
          pipenv run python generate_data/generate_csv_data.py -g 10 -type flights bus train -v -o
      - name: Analysing the code with pylint
        run: |
          export PYTHONPATH=$PYTHONPATH:/home/runner/work/Web-app-python/Web-app-python/utils:/home/runner/work/Web-app-python/Web-app-python/generate_data
          pipenv run pylint --rcfile=pylint.cfg $(git ls-files '*.py') -s true --fail-under=10
      - name: Now running Pytest
        run: |
          export PYTHONPATH=$PYTHONPATH:/home/runner/work/Web-app-python/Web-app-python/utils:/home/runner/work/Web-app-python/Web-app-python/generate_data
          pipenv run pytest
